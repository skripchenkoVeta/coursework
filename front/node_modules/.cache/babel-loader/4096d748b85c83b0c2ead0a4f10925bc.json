{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\2\\\\online-store-master\\\\front\\\\src\\\\pages\\\\Report.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Col, Container, Dropdown, Form, Image, Modal, Row } from \"react-bootstrap\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { fetchDeleteDevice, fetchOneDevice, updateDevices } from \"../http/deviceAPI\";\nimport { Context } from \"../index\";\nimport { ADMIN_ROUTE } from \"../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DevicePageEdit = () => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [deviceCurr, setDeviceCurr] = useState({});\n  const [showMsg, setShowMsg] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [selectBrand, setSelectBrand] = useState({});\n  const [selectType, setSelectType] = useState({});\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [img, setImg] = useState(\"\");\n  const [imgFile, setImgFile] = useState(null);\n  const [info, setInfo] = useState([]);\n  const [isDisabledPutBtn, setDisabledPutBtn] = useState(true);\n\n  const deleteDevice = () => {\n    fetchDeleteDevice(id).then(() => {\n      history.push(ADMIN_ROUTE);\n    });\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const imgHandler = e => {\n    e.preventDefault();\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImg(reader.result);\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n    setImgFile(e.target.files[0]);\n  }; //info\n\n\n  const addInfo = () => {\n    setInfo([...info, {\n      title: '',\n      description: '',\n      id: Date.now()\n    }]);\n  };\n\n  const deleteInfo = number => {\n    setInfo(info.filter(item => item.number !== number));\n  };\n\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map(i => i.id === number ? { ...i,\n      [key]: value\n    } : i));\n  };\n\n  const putDevice = () => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', `${price}`);\n    formData.append('img', imgFile);\n    formData.append('brandId', selectBrand.id);\n    formData.append('typeId', selectType.id);\n    formData.append('info', JSON.stringify(info));\n    updateDevices(id, formData).then(data => {\n      setShowMsg(true);\n      setMsg(data);\n      setTimeout(() => setShowMsg(true), 5000);\n    });\n  };\n\n  const checkInfo = () => {\n    let isInfoEmpty = true;\n    info.forEach(item => {\n      for (let key in item) {\n        if (key === \"title\" || key === \"description\") {\n          if (!item[key]) {\n            isInfoEmpty = false;\n          }\n        }\n      }\n    });\n    return isInfoEmpty;\n  };\n\n  useEffect(() => {\n    let checkInfoVal = false;\n\n    if (deviceCurr.info && deviceCurr.info.length !== info.length) {\n      checkInfoVal = checkInfo();\n    }\n\n    if (deviceCurr && deviceCurr.brand && deviceCurr.type) {\n      if (deviceCurr.brand.name !== selectBrand.name || deviceCurr.type.name !== selectType.name || deviceCurr.name !== name || deviceCurr.price !== price || checkInfoVal || img) {\n        setDisabledPutBtn(false);\n      } else {\n        setDisabledPutBtn(true);\n      }\n    }\n  }, [name, selectBrand, selectType, price, img, info]);\n  useEffect(() => {\n    fetchOneDevice(id).then(data => {\n      setDeviceCurr(data);\n      setSelectBrand(data.brand);\n      setSelectType(data.type);\n      setName(data.name);\n      setPrice(data.price);\n      setInfo(data.info);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: [showMsg && /*#__PURE__*/_jsxDEV(Row, {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"AAA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectBrand.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectType.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DevicePageEdit, \"DDmLw+9zyITBUs74wqqDYk4PqcQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DevicePageEdit;\nexport default DevicePageEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicePageEdit\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/2/online-store-master/front/src/pages/Report.js"],"names":["React","useContext","useEffect","useState","Button","Col","Container","Dropdown","Form","Image","Modal","Row","useParams","useHistory","fetchDeleteDevice","fetchOneDevice","updateDevices","Context","ADMIN_ROUTE","DevicePageEdit","device","history","id","deviceCurr","setDeviceCurr","showMsg","setShowMsg","msg","setMsg","selectBrand","setSelectBrand","selectType","setSelectType","name","setName","price","setPrice","img","setImg","imgFile","setImgFile","info","setInfo","isDisabledPutBtn","setDisabledPutBtn","deleteDevice","then","push","show","setShow","handleClose","handleShow","imgHandler","e","preventDefault","reader","FileReader","onload","result","readAsDataURL","target","files","addInfo","title","description","Date","now","deleteInfo","number","filter","item","changeInfo","key","value","map","i","putDevice","formData","FormData","append","JSON","stringify","data","setTimeout","checkInfo","isInfoEmpty","forEach","checkInfoVal","length","brand","type"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Dropdown, Form, Image, Modal, Row} from \"react-bootstrap\";\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport {fetchDeleteDevice, fetchOneDevice, updateDevices} from \"../http/deviceAPI\";\r\nimport {Context} from \"../index\";\r\nimport {ADMIN_ROUTE} from \"../utils/consts\";\r\n\r\n\r\nconst DevicePageEdit = () => {\r\n    const {device} = useContext(Context);\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    const [deviceCurr, setDeviceCurr] = useState({});\r\n    const [showMsg, setShowMsg] = useState(false);\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [selectBrand, setSelectBrand] = useState({});\r\n    const [selectType, setSelectType] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [img, setImg] = useState(\"\");\r\n    const [imgFile, setImgFile] = useState(null);\r\n    const [info, setInfo] = useState([]);\r\n\r\n    const [isDisabledPutBtn, setDisabledPutBtn] = useState(true);\r\n\r\n    const deleteDevice = () => {\r\n        fetchDeleteDevice(id).then(() => {\r\n            history.push(ADMIN_ROUTE);\r\n        })\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const imgHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setImg(reader.result);\r\n        };\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        setImgFile(e.target.files[0]);\r\n    }\r\n\r\n    //info\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', id: Date.now()}]);\r\n    };\r\n\r\n    const deleteInfo = (number) => {\r\n        setInfo(info.filter(item => item.number !== number));\r\n    };\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.id === number ? {...i, [key]: value} : i));\r\n    };\r\n\r\n    const putDevice = () => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', `${price}`);\r\n        formData.append('img', imgFile);\r\n        formData.append('brandId', selectBrand.id);\r\n        formData.append('typeId', selectType.id);\r\n        formData.append('info', JSON.stringify(info));\r\n        updateDevices(id, formData).then(data => {\r\n            setShowMsg(true);\r\n            setMsg(data);\r\n            setTimeout(() => setShowMsg(true), 5000)\r\n        });\r\n    }\r\n\r\n    const checkInfo = () => {\r\n        let isInfoEmpty = true;\r\n        info.forEach(item => {\r\n            for(let key in item) {\r\n                if(key === \"title\" || key === \"description\") {\r\n                    if(!item[key]) {\r\n                        isInfoEmpty = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return isInfoEmpty;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let checkInfoVal = false;\r\n        if(deviceCurr.info && deviceCurr.info.length !== info.length) {\r\n            checkInfoVal = checkInfo();\r\n        }\r\n\r\n        if(deviceCurr && deviceCurr.brand && deviceCurr.type) {\r\n            if(deviceCurr.brand.name !== selectBrand.name ||\r\n                deviceCurr.type.name !== selectType.name ||\r\n                deviceCurr.name !== name ||\r\n                deviceCurr.price !== price ||\r\n                checkInfoVal ||\r\n                img\r\n            ) {\r\n                setDisabledPutBtn(false);\r\n            } else {\r\n                setDisabledPutBtn(true);\r\n            }\r\n        }\r\n    }, [name, selectBrand, selectType, price, img, info]);\r\n\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => {\r\n            setDeviceCurr(data);\r\n            setSelectBrand(data.brand);\r\n            setSelectType(data.type);\r\n            setName(data.name);\r\n            setPrice(data.price);\r\n            setInfo(data.info)\r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        \r\n        <Container className=\"mt-3\">\r\n            {showMsg && <Row>\r\n                {msg}\r\n            </Row>}\r\n\r\n            <Row>\r\n            <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>E-mail</th>\r\n                <th>Phone</th>\r\n                <th>AAA</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{price}</td>\r\n                <td>{selectBrand.name}</td>\r\n                <td>{selectType.name}</td>\r\n                                </tr>\r\n        </tbody>\r\n    </table>\r\n               \r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePageEdit;\r\n\r\n"]},"metadata":{},"sourceType":"module"}