{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const deleteType = async id => {\n  const {\n    data\n  } = await $authHost({\n    method: 'DELETE',\n    url: 'api/type/' + id\n  });\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/brand', brand);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await $host.get('api/brand');\n  return data;\n};\nexport const deleteBrand = async id => {\n  const {\n    data\n  } = await $authHost({\n    method: 'DELETE',\n    url: 'api/brand/' + id\n  });\n  return data;\n};\nexport const createDrivingSchool = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/drivingschool', brand);\n  return data;\n};\nexport const fetchDrivingSchool = async (typeId, brandId, page, limit = 9) => {\n  const {\n    data\n  } = await $host.get('api/drivingschool', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneDrivingSchool = async id => {\n  const {\n    data\n  } = await $host.get(`api/drivingschool/${id}`);\n  return data;\n};\nexport const fetchDeleteDrivingSchool = async id => {\n  const {\n    data\n  } = await $authHost({\n    method: 'DELETE',\n    url: `api/drivingschool/${id}`\n  });\n  return data;\n};\nexport const updateDrivingSchools = async (id, body) => {\n  const {\n    data\n  } = await $authHost({\n    method: 'PUT',\n    url: `api/drivingschool/${id}`,\n    data: body\n  });\n  return data;\n};\nexport const getAllDrivingSchoolsInAdminPage = async (name, page = 1, filter = \"Все\") => {\n  const {\n    data\n  } = await $authHost({\n    method: 'GET',\n    url: `api/drivingschool/search?page=${page}&name=${name}&filter=${filter}`\n  });\n  return data;\n};\nexport const getAllDrivingSchoolsInShopPage = async (name, page = 1, filter = \"Все\") => {\n  const {\n    data\n  } = await $authHost({\n    method: 'GET',\n    url: `api/drivingschool/search?page=${page}&name=${name}&filter=${filter}`\n  });\n  return data;\n};\nexport const addDrivingSchoolToBasket = async drivingschool => {\n  const {\n    data\n  } = await $authHost.post('api/basket', drivingschool);\n  return data;\n};\nexport const getDrivingSchoolFromBasket = async () => {\n  const {\n    data\n  } = await $authHost.get('api/basket');\n  return data;\n};\nexport const deleteDrivingSchoolFromBasket = async id => {\n  const {\n    data\n  } = await $authHost.delete(`api/basket/${id}`);\n  return data;\n};\nexport const addRating = async body => {\n  const {\n    data\n  } = await $authHost.post('api/rating', body);\n  return data;\n};\nexport const checkRating = async body => {\n  const {\n    data\n  } = await $authHost.post('api/rating/check-rating', body);\n  return data;\n};\nexport const fetchRating = async () => {\n  const {\n    data\n  } = await $host.get('api/rating');\n  return data;\n};","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/2/online-store-master/front/src/http/drivingschoolAPI.js"],"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","deleteType","id","method","url","createBrand","brand","fetchBrands","deleteBrand","createDrivingSchool","fetchDrivingSchool","typeId","brandId","page","limit","params","fetchOneDrivingSchool","fetchDeleteDrivingSchool","updateDrivingSchools","body","getAllDrivingSchoolsInAdminPage","name","filter","getAllDrivingSchoolsInShopPage","addDrivingSchoolToBasket","drivingschool","getDrivingSchoolFromBasket","deleteDrivingSchoolFromBasket","delete","addRating","checkRating","fetchRating"],"mappings":"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","sourcesContent":["import {$authHost, $host} from \"./index\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type);\n    return data;\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type');\n    return data;\n}\n\nexport const deleteType = async (id) => {\n    const {data} = await $authHost({method:'DELETE', url:'api/type/'+id});\n    return data;\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand);\n    return data;\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand');\n    return data;\n}\n\nexport const deleteBrand = async (id) => {\n    const {data} = await $authHost({method:'DELETE', url:'api/brand/'+id});\n    return data;\n}\n\nexport const createDrivingSchool = async (brand) => {\n    const {data} = await $authHost.post('api/drivingschool', brand);\n    return data;\n}\n\nexport const fetchDrivingSchool = async (typeId, brandId, page, limit = 9) => {\n    const {data} = await $host.get('api/drivingschool', {params: {\n            typeId, brandId,page, limit\n        }});\n    return data;\n}\n\nexport const fetchOneDrivingSchool = async (id) => {\n    const {data} = await $host.get(`api/drivingschool/${id}`);\n    return data;\n}\n\nexport const fetchDeleteDrivingSchool = async (id) => {\n    const {data} = await $authHost({method:'DELETE', url:`api/drivingschool/${id}`});\n    return data;\n}\n\nexport const updateDrivingSchools = async (id, body) => {\n    const {data} = await $authHost({method:'PUT', url:`api/drivingschool/${id}`, data: body});\n    return data;\n}\n\nexport const getAllDrivingSchoolsInAdminPage = async (name, page = 1, filter = \"Все\") => {\n    const {data} = await $authHost({method:'GET', url:`api/drivingschool/search?page=${page}&name=${name}&filter=${filter}`});\n    return data;\n}\nexport const getAllDrivingSchoolsInShopPage = async (name, page = 1, filter = \"Все\") => {\n    const {data} = await $authHost({method:'GET', url:`api/drivingschool/search?page=${page}&name=${name}&filter=${filter}`});\n    return data;\n}\n\nexport const addDrivingSchoolToBasket = async (drivingschool) => {\n    const {data} = await $authHost.post('api/basket', drivingschool);\n    return data;\n}\n\nexport const getDrivingSchoolFromBasket = async () => {\n    const {data} = await $authHost.get('api/basket');\n    return data;\n}\n\nexport const deleteDrivingSchoolFromBasket = async (id) => {\n    const {data} = await $authHost.delete(`api/basket/${id}`);\n    return data;\n}\n\nexport const addRating = async (body) => {\n    const {data} = await $authHost.post('api/rating', body);\n    return data;\n}\n\nexport const checkRating = async (body) => {\n    const {data} = await $authHost.post('api/rating/check-rating', body);\n    return data;\n}\nexport const fetchRating = async () => {\n    const {data} = await $host.get('api/rating');\n    return data;\n}"]},"metadata":{},"sourceType":"module"}