{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\2\\\\online-store-master\\\\front\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport RatingBar from '../components/RatingBar';\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevice, fetchTypes, fetchRating } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchRating().then(data => device.setRating(data));\n    fetchDevice(null, null, 1, 9).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (device.selectedType === \"all\") {\n      fetchDevice(null, device.selectedBrand.id, device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    } else {\n      fetchDevice(device.selectedType.id, device.selectedBrand.id, device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    }\n  }, [device.page, device.selectedType, device.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeviceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"UK3pUfrx5U/q83gYpm2j5QfJmbk=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/2/online-store-master/front/src/pages/Shop.js"],"names":["React","useContext","useEffect","Col","Container","Row","TypeBar","BrandBar","RatingBar","DeviceList","observer","Context","fetchBrands","fetchDevice","fetchTypes","fetchRating","Pages","Shop","device","then","data","setTypes","setBrands","setRating","setDevices","rows","setTotalCount","count","selectedType","selectedBrand","id","page"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport RatingBar from '../components/RatingBar';\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevice, fetchTypes,fetchRating} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context);\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data));\n        fetchBrands().then(data => device.setBrands(data));\n        fetchRating().then(data=> device.setRating(data))\n        fetchDevice(null, null, 1, 9).then(data => {\n            device.setDevices(data.rows);\n            device.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(device.selectedType === \"all\") {\n                    fetchDevice(null, device.selectedBrand.id, device.page, 9).then(data => {\n                        device.setDevices(data.rows);\n                        device.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchDevice(device.selectedType.id, device.selectedBrand.id, device.page, 9).then(data => {\n                        device.setDevices(data.rows);\n                        device.setTotalCount(data.count);\n                    });\n                }\n        }, [device.page, device.selectedType, device.selectedBrand],\n    );\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}