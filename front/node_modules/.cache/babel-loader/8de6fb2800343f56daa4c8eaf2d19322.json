{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\coursework\\\\front\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport Footer from \"../components/Footer\";\nimport DrivingSchoolList from \"../components/DrivingSchoolList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDrivingSchool, fetchTypes } from \"../http/drivingschoolAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    drivingschool\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => drivingschool.setTypes(data));\n    fetchBrands().then(data => drivingschool.setBrands(data));\n    fetchDrivingSchool(null, null, 1, 9).then(data => {\n      drivingschool.setDrivingSchools(data.rows);\n      drivingschool.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (drivingschool.selectedType === \"all\") {\n      fetchDrivingSchool(null, drivingschool.selectedBrand.id,\n      /*drivingschool.selectedRating.id,*/\n      drivingschool.page, 9).then(data => {\n        drivingschool.setDrivingSchools(data.rows);\n        drivingschool.setTotalCount(data.count);\n      });\n    } else {\n      fetchDrivingSchool(drivingschool.selectedType.id, drivingschool.selectedBrand.id,\n      /*drivingschool.selectedRating.id,*/\n      drivingschool.page, 9).then(data => {\n        drivingschool.setDrivingSchools(data.rows);\n        drivingschool.setTotalCount(data.count);\n      });\n    }\n  }, [drivingschool.page, drivingschool.selectedType,\n  /*drivingschool.selectedRating,*/\n  drivingschool.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrivingSchoolList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}, \"vj0q1iJy6z797+GUQVublTzMcxE=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/Lenovo/coursework/front/src/pages/Shop.js"],"names":["React","useContext","useEffect","Col","Container","Row","TypeBar","BrandBar","Footer","DrivingSchoolList","observer","Context","fetchBrands","fetchDrivingSchool","fetchTypes","Pages","Shop","drivingschool","then","data","setTypes","setBrands","setDrivingSchools","rows","setTotalCount","count","selectedType","selectedBrand","id","page"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\n\nimport Footer from \"../components/Footer\";\nimport DrivingSchoolList from \"../components/DrivingSchoolList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDrivingSchool, fetchTypes} from \"../http/drivingschoolAPI\";\nimport Pages from \"../components/Pages\";\n\n\nconst Shop = observer(() => {\n    const {drivingschool} = useContext(Context);\n\n    useEffect(() => {\n        fetchTypes().then(data => drivingschool.setTypes(data));\n        fetchBrands().then(data => drivingschool.setBrands(data));\n        fetchDrivingSchool(null, null, 1, 9).then(data => {\n            drivingschool.setDrivingSchools(data.rows);\n            drivingschool.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(drivingschool.selectedType === \"all\") {\n                    fetchDrivingSchool(null, drivingschool.selectedBrand.id,/*drivingschool.selectedRating.id,*/ drivingschool.page, 9).then(data => {\n                        drivingschool.setDrivingSchools(data.rows);\n                        drivingschool.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchDrivingSchool(drivingschool.selectedType.id, drivingschool.selectedBrand.id,/*drivingschool.selectedRating.id,*/ drivingschool.page, 9).then(data => {\n                        drivingschool.setDrivingSchools(data.rows);\n                        drivingschool.setTotalCount(data.count);\n                    });\n                }\n        }, [drivingschool.page, drivingschool.selectedType,/*drivingschool.selectedRating,*/ drivingschool.selectedBrand],\n    );\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DrivingSchoolList/>\n                    <Pages/>\n                    \n            <Footer/>\n                </Col>\n                \n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}