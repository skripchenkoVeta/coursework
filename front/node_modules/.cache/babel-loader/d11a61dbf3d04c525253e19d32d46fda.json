{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\2\\\\online-store-master\\\\front\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { getAllDevicesInShopPage } from \"../http/deviceAPI\";\nimport { fetchBrands, fetchDevice, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const [searchDevice, setSearchDevice] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filter, setFilter] = useState(\"Все\");\n  useEffect(() => {\n    getAllDevicesInShopPage(searchDevice, currentPage, filter).then(({\n      count,\n      rows\n    }) => {\n      setSearchedDevice(rows);\n      setCount(count);\n    });\n  }, [currentPage]);\n\n  const fetchDevice = () => {\n    getAllDevicesInShopPage(searchDevice, currentPage, filter).then(({\n      count,\n      rows\n    }) => {\n      setSearchedDevice(rows);\n      setCount(count);\n    });\n  };\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevice(null, null, 1, 9).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (device.selectedType === \"all\") {\n      fetchDevice(null, device.selectedBrand.id, device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    } else {\n      fetchDevice(device.selectedType.id, device.selectedBrand.id, device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    }\n  }, [device.page, device.selectedType, device.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        \"aria-label\": \"Default\",\n        \"aria-describedby\": \"inputGroup-sizing-default\",\n        value: searchDevice,\n        onChange: e => setSearchDevice(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0448\\u043A\\u043E\\u043B\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchDevice,\n        variant: \"outline-dark\",\n        className: \"ml-2\",\n        children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeviceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}, \"cm1FDBIzzxiTTg3Q4EVUd2RtTqY=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/2/online-store-master/front/src/pages/Shop.js"],"names":["React","useContext","useEffect","Col","Container","Row","TypeBar","BrandBar","DeviceList","observer","Context","getAllDevicesInShopPage","fetchBrands","fetchDevice","fetchTypes","Pages","Shop","device","searchDevice","setSearchDevice","useState","currentPage","setCurrentPage","filter","setFilter","then","count","rows","setSearchedDevice","setCount","data","setTypes","setBrands","setDevices","setTotalCount","selectedType","selectedBrand","id","page","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {getAllDevicesInShopPage} from \"../http/deviceAPI\";\nimport {fetchBrands, fetchDevice, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context);\n    const [searchDevice, setSearchDevice] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [filter, setFilter] = useState(\"Все\");\n\n    useEffect(() => {\n        getAllDevicesInShopPage(searchDevice, currentPage, filter).then(({count, rows}) => {\n            setSearchedDevice(rows);\n            setCount(count)\n        })\n    }, [currentPage])\n\n    const fetchDevice = () => {\n        getAllDevicesInShopPage(searchDevice, currentPage, filter).then(({count, rows}) => {\n            setSearchedDevice(rows);\n            setCount(count)\n        })\n    };\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data));\n        fetchBrands().then(data => device.setBrands(data));\n        fetchDevice(null, null, 1, 9).then(data => {\n            device.setDevices(data.rows);\n            device.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(device.selectedType === \"all\") {\n                    fetchDevice(null, device.selectedBrand.id, device.page, 9).then(data => {\n                        device.setDevices(data.rows);\n                        device.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchDevice(device.selectedType.id, device.selectedBrand.id, device.page, 9).then(data => {\n                        device.setDevices(data.rows);\n                        device.setTotalCount(data.count);\n                    });\n                }\n        }, [device.page, device.selectedType, device.selectedBrand],\n    );\n\n    return (\n        <Container>\n             <InputGroup className=\"mb-3\">\n                <Form.Control\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    value={searchDevice}\n                    onChange={e => setSearchDevice(e.target.value)}\n                    placeholder=\"Введите название автошколы\"\n                />\n                <Button\n                    onClick={fetchDevice}\n                    variant=\"outline-dark\"\n                    className=\"ml-2\"\n                >\n                    Поиск\n                </Button>\n            </InputGroup>\n            <Row className=\"mt-3\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n               \n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}