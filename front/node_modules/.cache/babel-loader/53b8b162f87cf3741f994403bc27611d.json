{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\coursework\\\\front\\\\src\\\\components\\\\modals\\\\DeleteBrandOrType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Dropdown, Modal } from \"react-bootstrap\";\nimport { deleteBrand, deleteType, fetchBrands, fetchTypes } from \"../../http/drivingschoolAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteBrandOrType = ({\n  show,\n  onHide,\n  showSuccessMsgFunc\n}) => {\n  _s();\n\n  const [brandOrType, setBrandOrType] = useState(\"Форма обучения\");\n  const [brands, setBrands] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [selectBrand, setSelectBrand] = useState({\n    name: \"Форма обучения не выбрана\"\n  });\n  const [selectType, setSelectType] = useState({\n    name: \"Район не выбран\"\n  });\n  const [showMsgErr, setShowMsgErr] = useState(false);\n  const [msgErr, setMsgErr] = useState('');\n  useEffect(() => {\n    fetchTypes().then(data => setTypes(data));\n    fetchBrands().then(data => setBrands(data));\n  }, []);\n\n  const Delete = async () => {\n    if (brandOrType === \"Форма обучения\") {\n      if (selectBrand.name !== \"Форма обучения не выбрана\") {\n        await deleteBrand(selectBrand.id).then(data => {\n          showSuccessMsgFunc(data);\n          onHide();\n          setSelectBrand({\n            name: \"Форма обучения не выбрана\"\n          });\n        });\n      } else {\n        setMsgErr(\"Please choose Brand\");\n        setShowMsgErr(true);\n      }\n    } else {\n      if (selectType.name !== \"A Type not selected\") {\n        await deleteType(selectType.id).then(data => {\n          showSuccessMsgFunc(data);\n          onHide();\n          setSelectType({\n            name: \"A type not selected\"\n          });\n        });\n      } else {\n        setMsgErr(\"Please choose Type\");\n        setShowMsgErr(true);\n      }\n    }\n  };\n\n  useEffect(() => setShowMsgErr(false), [selectType, selectBrand, brandOrType]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Delete Type or Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [showMsgErr && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            textAlign: \"center\"\n          },\n          children: msgErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), \"Choose Category:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"mb-3\",\n        style: {\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: brandOrType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [brandOrType === \"Форма обучения\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setBrandOrType(\"Форма обучения\"),\n            children: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 109\n          }, this), brandOrType === \"Type\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setBrandOrType(\"Type\"),\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), \"Choose item of \", brandOrType === \"Форма обучения\" ? \"Форма обучения\" : \"Type\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"mb-3\",\n        style: {\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: brandOrType === \"Форма обучения\" ? selectBrand.name : selectType.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: brandOrType === \"Форма обучения\" ? brands.map(({\n            id,\n            name\n          }) => selectBrand.name === name ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSelectBrand({\n              id,\n              name\n            }),\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 119\n          }, this)) : types.map(({\n            id,\n            name\n          }) => selectType.name === name ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSelectType({\n              id,\n              name\n            }),\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 119\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: Delete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteBrandOrType, \"ihca+bYArVlLBSWinP9FFT2xYZ0=\");\n\n_c = DeleteBrandOrType;\nexport default DeleteBrandOrType;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteBrandOrType\");","map":{"version":3,"sources":["C:/Users/Lenovo/coursework/front/src/components/modals/DeleteBrandOrType.js"],"names":["React","useEffect","useState","Button","Dropdown","Modal","deleteBrand","deleteType","fetchBrands","fetchTypes","DeleteBrandOrType","show","onHide","showSuccessMsgFunc","brandOrType","setBrandOrType","brands","setBrands","types","setTypes","selectBrand","setSelectBrand","name","selectType","setSelectType","showMsgErr","setShowMsgErr","msgErr","setMsgErr","then","data","Delete","id","color","textAlign","margin","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Button, Dropdown, Modal} from \"react-bootstrap\";\nimport {deleteBrand, deleteType, fetchBrands, fetchTypes} from \"../../http/drivingschoolAPI\";\n\nconst DeleteBrandOrType = ({show, onHide, showSuccessMsgFunc}) => {\n    const [brandOrType, setBrandOrType] = useState(\"Форма обучения\");\n    const [brands, setBrands] = useState([]);\n    const [types, setTypes] = useState([]);\n    const [selectBrand, setSelectBrand] = useState({name: \"Форма обучения не выбрана\"});\n    const [selectType, setSelectType] = useState({name: \"Район не выбран\"});\n    const [showMsgErr, setShowMsgErr] = useState(false);\n    const [msgErr, setMsgErr] = useState('');\n\n    useEffect(() => {\n        fetchTypes().then(data => setTypes(data));\n        fetchBrands().then(data => setBrands(data));\n    }, []);\n\n    const Delete = async () => {\n        if(brandOrType === \"Форма обучения\") {\n            if(selectBrand.name !== \"Форма обучения не выбрана\") {\n                await deleteBrand(selectBrand.id).then(data => {\n                    showSuccessMsgFunc(data);\n                    onHide();\n                    setSelectBrand({name: \"Форма обучения не выбрана\"});\n                });\n            } else {\n                setMsgErr(\"Please choose Brand\");\n                setShowMsgErr(true);\n            }\n        } else {\n            if(selectType.name !== \"A Type not selected\") {\n                await deleteType(selectType.id).then(data => {\n                    showSuccessMsgFunc(data);\n                    onHide();\n                    setSelectType({name: \"A type not selected\"});\n                });\n            } else {\n                setMsgErr(\"Please choose Type\");\n                setShowMsgErr(true);\n            }\n        }\n    };\n\n    useEffect(() => setShowMsgErr(false), [selectType, selectBrand, brandOrType])\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Delete Type or Brand\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {showMsgErr &&\n                    <>\n                        <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n                    </>\n                }\n\n                Choose Category:\n                <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {brandOrType}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {brandOrType === \"Форма обучения\" ? <Dropdown.Item disabled>Brand</Dropdown.Item> : <Dropdown.Item onClick={() => setBrandOrType(\"Форма обучения\")}>Форма обучения</Dropdown.Item>}\n                        {brandOrType === \"Type\" ? <Dropdown.Item disabled>Type</Dropdown.Item> : <Dropdown.Item onClick={() => setBrandOrType(\"Type\")}>Type</Dropdown.Item>}\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                Choose item of {brandOrType === \"Форма обучения\" ? \"Форма обучения\" : \"Type\"}\n                <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {brandOrType === \"Форма обучения\" ? selectBrand.name : selectType.name}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {brandOrType === \"Форма обучения\" ?\n                            brands.map(({id, name}) =>\n                                selectBrand.name === name ? <Dropdown.Item disabled key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectBrand({id, name})}>{name}</Dropdown.Item>\n                            )\n                            :\n                            types.map(({id, name}) =>\n                                selectType.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectType({id, name})}>{name}</Dropdown.Item>\n                            )\n                        }\n\n                    </Dropdown.Menu>\n                </Dropdown>\n\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\n                <Button variant=\"outline-success\" onClick={Delete}>Delete</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteBrandOrType;\n"]},"metadata":{},"sourceType":"module"}