{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\2\\\\online-store-master\\\\front\\\\src\\\\components\\\\ReportAll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevice, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportAll = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevice(null, null, 1, 9).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (device.selectedType === \"all\") {\n      fetchDevice(null, device.selectedBrand.id,\n      /*device.selectedRating.id,*/\n      device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    } else {\n      fetchDevice(device.selectedType.id, device.selectedBrand.id,\n      /*device.selectedRating.id,*/\n      device.page, 9).then(data => {\n        device.setDevices(data.rows);\n        device.setTotalCount(data.count);\n      });\n    }\n  }, [device.page, device.selectedType,\n  /*device.selectedRating,*/\n  device.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}, \"UK3pUfrx5U/q83gYpm2j5QfJmbk=\"));\n_c2 = ReportAll;\nexport default ReportAll;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReportAll$observer\");\n$RefreshReg$(_c2, \"ReportAll\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/2/online-store-master/front/src/components/ReportAll.js"],"names":["React","useContext","useEffect","Col","Container","Row","TypeBar","BrandBar","DeviceList","observer","Context","fetchBrands","fetchDevice","fetchTypes","Pages","ReportAll","device","then","data","setTypes","setBrands","setDevices","rows","setTotalCount","count","selectedType","selectedBrand","id","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,UAAlC,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,SAAS,GAAGN,QAAQ,SAAC,MAAM;AAAA;;AAC7B,QAAM;AAACO,IAAAA;AAAD,MAAWf,UAAU,CAACS,OAAD,CAA3B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAIF,MAAM,CAACG,QAAP,CAAgBD,IAAhB,CAA1B;AACAP,IAAAA,WAAW,GAAGM,IAAd,CAAmBC,IAAI,IAAIF,MAAM,CAACI,SAAP,CAAiBF,IAAjB,CAA3B;AACAN,IAAAA,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgB,CAAhB,CAAX,CAA8BK,IAA9B,CAAmCC,IAAI,IAAI;AACvCF,MAAAA,MAAM,CAACK,UAAP,CAAkBH,IAAI,CAACI,IAAvB;AACAN,MAAAA,MAAM,CAACO,aAAP,CAAqBL,IAAI,CAACM,KAA1B;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AASAtB,EAAAA,SAAS,CACL,MAAM;AACF,QAAGc,MAAM,CAACS,YAAP,KAAwB,KAA3B,EAAkC;AAC1Bb,MAAAA,WAAW,CAAC,IAAD,EAAOI,MAAM,CAACU,aAAP,CAAqBC,EAA5B;AAA+B;AAA8BX,MAAAA,MAAM,CAACY,IAApE,EAA0E,CAA1E,CAAX,CAAwFX,IAAxF,CAA6FC,IAAI,IAAI;AACjGF,QAAAA,MAAM,CAACK,UAAP,CAAkBH,IAAI,CAACI,IAAvB;AACAN,QAAAA,MAAM,CAACO,aAAP,CAAqBL,IAAI,CAACM,KAA1B;AACH,OAHD;AAIH,KALL,MAKW;AACHZ,MAAAA,WAAW,CAACI,MAAM,CAACS,YAAP,CAAoBE,EAArB,EAAyBX,MAAM,CAACU,aAAP,CAAqBC,EAA9C;AAAiD;AAA8BX,MAAAA,MAAM,CAACY,IAAtF,EAA4F,CAA5F,CAAX,CAA0GX,IAA1G,CAA+GC,IAAI,IAAI;AACnHF,QAAAA,MAAM,CAACK,UAAP,CAAkBH,IAAI,CAACI,IAAvB;AACAN,QAAAA,MAAM,CAACO,aAAP,CAAqBL,IAAI,CAACM,KAA1B;AACH,OAHD;AAIH;AACR,GAbI,EAaF,CAACR,MAAM,CAACY,IAAR,EAAcZ,MAAM,CAACS,YAArB;AAAkC;AAA2BT,EAAAA,MAAM,CAACU,aAApE,CAbE,CAAT;AAgBA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtCyB,kCAA1B;MAAMX,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevice, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst ReportAll = observer(() => {\r\n    const {device} = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n        fetchDevice(null, null, 1, 9).then(data => {\r\n            device.setDevices(data.rows);\r\n            device.setTotalCount(data.count);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            if(device.selectedType === \"all\") {\r\n                    fetchDevice(null, device.selectedBrand.id,/*device.selectedRating.id,*/ device.page, 9).then(data => {\r\n                        device.setDevices(data.rows);\r\n                        device.setTotalCount(data.count);\r\n                    });\r\n                } else {\r\n                    fetchDevice(device.selectedType.id, device.selectedBrand.id,/*device.selectedRating.id,*/ device.page, 9).then(data => {\r\n                        device.setDevices(data.rows);\r\n                        device.setTotalCount(data.count);\r\n                    });\r\n                }\r\n        }, [device.page, device.selectedType,/*device.selectedRating,*/ device.selectedBrand],\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                \r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ReportAll;\r\n"]},"metadata":{},"sourceType":"module"}